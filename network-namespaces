# Override util-vserver settings
#set -x
function createMacVidId() {
	local S_CONTEXT
	read S_CONTEXT < /etc/vservers/${1}/context
	(
		printf "02"
		printf "%04x" $2 # I usually use VID
		printf "%04x" $S_CONTEXT
		printf "%02x" $3 # IFACE number f.i.
	)|
        sed 's/\(..\)\(..\)\(..\)\(..\)\(..\)\(..\)/\1:\2:\3:\4:\5:\6/'
}
function usesipnetns() {
	local netspace
	if [ -s "$VSERVER_DIR/spaces/net" ]
	then
		read netspace < "$VSERVER_DIR/spaces/net"
		[ "$netspace" = "$VSERVER_NAME" ]
		return $?
	fi
	return 1
}
case "${1}" in
	initialize)
		if usesipnetns
		then
			_HIP="$_IP"
			_IP="$_HIP netns exec ${2} $_HIP"
			$_HIP netns add ${2}
		 	$_IP link set dev lo up
		fi
		;;
	prepre-start)
		if usesipnetns
		then
			$_HIP link add link vlan1 name if-${2} type macvlan mode bridge
			$_HIP link set dev if-${2} address $(createMacVidId $2 2 0)
			$_HIP link set dev if-${2} netns ${2}
		fi
		;;
	# By now all options are generated, time to override them
	pre-start)
		# NICE_CMD=(/sbin/ip netns exec ${2} "${NICE_CMD[@]}")
		if usesipnetns
		then
			local index
			local NEWVSPACE_CMDS
			declare -a NEWVSPACE_CMDS
			index=0;
			while [ $index -lt ${#VSPACE_SHARED_CMD[@]} ]
			do
				if
					[ "${VSPACE_SHARED_CMD[$((${index}+0))]}" = "$_VSPACE" ] &&
					[ "${VSPACE_SHARED_CMD[$((${index}+1))]}" = "--enter" ] &&
					[ "${VSPACE_SHARED_CMD[$((${index}+2))]}" = "${2}" ] &&
					[ "${VSPACE_SHARED_CMD[$((${index}+3))]}" = "--net" ]
				then
					NEWSPACE_CMDS=("${NEWSPACE_CMDS[@]}" $_HIP netns exec "$2")		
					index=$(($index+5))
				else
					NEWSPACE_CMDS=("${NEWSPACE_CMDS[@]}" "${VSPACE_SHARED_CMD[$index]}")
					index=$(($index+1))
				fi
			done
			VSPACE_SHARED_CMD=("${NEWSPACE_CMDS[@]}")
			unset NEWVSPACE_CMDS
			unset index
			ip netns exec ${2} /usr/lib/util-vserver/vprocunhide
		fi
		;;
        post-start)
		if usesipnetns
		then
			$_IP route add default via 192.168.0.25
			ip netns exec ${2} /usr/lib/util-vserver/vprocunhide
		fi
		;;
	pre-stop)
		if usesipnetns
		then
			_HIP="$_IP"
			_IP="$_HIP netns exec ${2} $_HIP"
		fi
		;;
	post-stop)
		if usesipnetns
		then
			$_IP link del if-${2}
			$_HIP netns delete ${2}
		fi
		;;
esac
